{
  "comments": [
    {
      "key": {
        "uuid": "7a46c9f1_a459c690",
        "filename": "t/lib/Selenium/Collection/testfunctions.pm",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2019-05-21T11:26:56Z",
      "side": 1,
      "message": "Hm... did you merge all *.t files into on .pm here? Hm...",
      "revId": "7bfa3438db16e402851be1abe35a9a315dd99e70",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a46c9f1_92864cb8",
        "filename": "t/lib/Selenium/Collection/testfunctions.pm",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000052
      },
      "writtenOn": "2019-05-22T06:54:02Z",
      "side": 1,
      "message": "Yeah its kinda messy, need to work out a better solution. Merging all into this file would not only mean that this code needs to be maintained 2 times, but also backporting would be a pain.",
      "parentUuid": "7a46c9f1_a459c690",
      "revId": "7bfa3438db16e402851be1abe35a9a315dd99e70",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a46c9f1_e45fce73",
        "filename": "t/selenium/runner.t",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2019-05-21T11:26:56Z",
      "side": 1,
      "message": "I believe we should have a proper perl Shebang here.\nWhat do you think?",
      "revId": "7bfa3438db16e402851be1abe35a9a315dd99e70",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a46c9f1_b29ee805",
        "filename": "t/selenium/runner.t",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000052
      },
      "writtenOn": "2019-05-22T06:54:02Z",
      "side": 1,
      "message": "Can add this no problem",
      "parentUuid": "7a46c9f1_e45fce73",
      "revId": "7bfa3438db16e402851be1abe35a9a315dd99e70",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a46c9f1_04651a44",
        "filename": "t/selenium/runner.t",
        "patchSetId": 10
      },
      "lineNbr": 40,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2019-05-21T11:26:56Z",
      "side": 1,
      "message": "I believe with this approach you not fully utilizing you 4 threads. will it run in a way: 1,2,3,4,3,2,1,1,2,3,4,3,2,1?",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 40,
        "endChar": 27
      },
      "revId": "7bfa3438db16e402851be1abe35a9a315dd99e70",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a46c9f1_129a3c15",
        "filename": "t/selenium/runner.t",
        "patchSetId": 10
      },
      "lineNbr": 40,
      "author": {
        "id": 1000052
      },
      "writtenOn": "2019-05-22T06:54:02Z",
      "side": 1,
      "message": "No. It defines the 4 threads with the first 4 functions, executes them, wait until they are done, defines the 4 threads with the second 4 tests, executes and waits until its done.",
      "parentUuid": "7a46c9f1_04651a44",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 40,
        "endChar": 27
      },
      "revId": "7bfa3438db16e402851be1abe35a9a315dd99e70",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a46c9f1_4d5fc50e",
        "filename": "t/selenium/runner.t",
        "patchSetId": 10
      },
      "lineNbr": 40,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2019-05-22T08:59:35Z",
      "side": 1,
      "message": "I have explained this in personal. We are really not use all 4 threads here in full. The longest thread in the first block will continue running while three other threads are sleeping (instead of starting some threads from the second block of tests).",
      "parentUuid": "7a46c9f1_129a3c15",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 40,
        "endChar": 27
      },
      "revId": "7bfa3438db16e402851be1abe35a9a315dd99e70",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a46c9f1_c8c980ae",
        "filename": "t/selenium/runner.t",
        "patchSetId": 10
      },
      "lineNbr": 40,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2019-05-27T10:59:57Z",
      "side": 1,
      "message": "presuming each thread takes different time, you can use the pattern below.\n\nwhile ((scalar keys %processors) \u003e 0) {\n    foreach my $processor (values %processors) {\n        if (defined $processor and $processor-\u003eis_joinable()) {\n            $processor-\u003ejoin();\n            delete $processors{$processor-\u003etid()};\n            mydebug(\u0027processor thread tid \u0027 . $processor-\u003etid() . \u0027 joined\u0027,getlogger(__PACKAGE__));\n        }\n    }\n    sleep($thread_sleep_secs);\n}\n\nsee eg. SqlProcessor.pm in [bulk-processor] package.",
      "parentUuid": "7a46c9f1_4d5fc50e",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 40,
        "endChar": 27
      },
      "revId": "7bfa3438db16e402851be1abe35a9a315dd99e70",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a46c9f1_447482fc",
        "filename": "t/selenium/testrunner",
        "patchSetId": 10
      },
      "lineNbr": 33,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2019-05-21T11:26:56Z",
      "side": 1,
      "message": "I believe you can make it shorter and slightly better readable:\n  \ndeclare -a DEFAULT_TEST_PLAN\u003d( $(find t/selenium/ -name \\*.t) )\ndeclare -a CUSTOM_TEST_PLAN\u003d( \"${@/#/t/selenium/}\" )\nif [ -z \"${1:-}\" ] || [ \"${1:-}\" \u003d\u003d \u0027*.t\u0027 ]; then\n  CUSTOM_TEST_PLAN\u003d( $(find t/selenium/ -name runner.t) )\nfi",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 33,
        "endChar": 2
      },
      "revId": "7bfa3438db16e402851be1abe35a9a315dd99e70",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a46c9f1_3293b8fc",
        "filename": "t/selenium/testrunner",
        "patchSetId": 10
      },
      "lineNbr": 33,
      "author": {
        "id": 1000052
      },
      "writtenOn": "2019-05-22T06:54:02Z",
      "side": 1,
      "message": "Will apply this!",
      "parentUuid": "7a46c9f1_447482fc",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 33,
        "endChar": 2
      },
      "revId": "7bfa3438db16e402851be1abe35a9a315dd99e70",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    }
  ]
}