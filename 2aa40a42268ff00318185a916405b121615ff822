{
  "comments": [
    {
      "key": {
        "uuid": "3c484820_5ccfcc78",
        "filename": "lib/NGCP/Panel/Utils/ProvisioningTemplates.pm",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2020-01-29T18:13:23Z",
      "side": 1,
      "message": "Doesn\u0027t this need to be within a BEGIN block?",
      "revId": "2aa40a42268ff00318185a916405b121615ff822",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08e49b00_7e789e7e",
        "filename": "lib/NGCP/Panel/Utils/ProvisioningTemplates.pm",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2020-01-30T08:32:55Z",
      "side": 1,
      "message": "BEGIN is some sort of bad habit imho.\nthere are only rare cases where BEGIN is mandatory (compile-time calculations for other compile-time stmts, eg. manipulating inc path)\n\nso BEGIN here would be needed only if exit() should be protected for the imports too.\nbut in such case the $DISABLE_EXIT global could not be used either, since it is initialized afterwards.",
      "parentUuid": "3c484820_5ccfcc78",
      "revId": "2aa40a42268ff00318185a916405b121615ff822",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd0319fc_89ee1cb7",
        "filename": "lib/NGCP/Panel/Utils/ProvisioningTemplates.pm",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2020-01-30T11:15:58Z",
      "side": 1,
      "message": "Well that\u0027s what the man for CORE says, and a test here seems to indicate it does not work otherwise, which is what I\u0027d have expected:\n\n  $ cat core.pl \n  #!/usr/bin/perl\n  use strict;\n  use warnings;\n  *CORE::GLOBAL::exit \u003d sub { CORE::exit(10) };\n  exit(2);\n  $ perl core.pl ; echo $?\n  Name \"CORE::GLOBAL::exit\" used only once: possible typo at core.pl  line 4.\n  2\n\n  $ cat core.pl \n  #!/usr/bin/perl\n  use strict;\n  use warnings;\n  BEGIN { *CORE::GLOBAL::exit \u003d sub { CORE::exit(10) }; }\n  exit(2);\n  $ perl core.pl ; echo $?\n  10\n\nNot to mention that otherwise it produces perl warnings. :D\n\nAlso the our is already being done at compile time, so that\u0027s not a problem here.\n\n\nIt would be nice to add the reason for this override, with a comment, f.ex.:\n\n  The function foo evaluates perl code provided via a configuration\n  by the user, so we must make sure no such code will call exit() by \n  accident or we would terminate the entire program.",
      "parentUuid": "08e49b00_7e789e7e",
      "revId": "2aa40a42268ff00318185a916405b121615ff822",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e5d28e0_9dbe352a",
        "filename": "lib/NGCP/Panel/Utils/ProvisioningTemplates.pm",
        "patchSetId": 2
      },
      "lineNbr": 1008,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2020-01-29T18:13:23Z",
      "side": 1,
      "message": "Who is calling exit?",
      "revId": "2aa40a42268ff00318185a916405b121615ff822",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d0ae204_26812cda",
        "filename": "lib/NGCP/Panel/Utils/ProvisioningTemplates.pm",
        "patchSetId": 2
      },
      "lineNbr": 1008,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2020-01-30T08:32:55Z",
      "side": 1,
      "message": "a somewhat paranoid example like this: https://paste.mgm.sipwise.com/show/6697/",
      "parentUuid": "9e5d28e0_9dbe352a",
      "revId": "2aa40a42268ff00318185a916405b121615ff822",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    }
  ]
}